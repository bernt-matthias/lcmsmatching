#!/usr/bin/env Rscript
# vi: ft=R
args <- commandArgs(trailingOnly = F)
script.path <- sub("--file=","",args[grep("--file=",args)])
library(getopt)
library(plyr)
source(file.path(dirname(script.path), '..', 'r-biodb', 'BiodbFactory.R'), chdir = TRUE)

#############
# READ ARGS #
#############

read.args <-  function() {
	spec = c(
		'input',       'i',            1,  'character',    'The path to the input file. The file must be a text file containing a list of Massbank spectra IDs.',
		'output',      'o',            1,  'character',    'The path to the output file.'
		)
	spec <- matrix(spec, byrow = TRUE, ncol = 5)
	opt <- getopt(spec)
	return(opt)
}

########
# MAIN #
########

opt <- read.args()

# Get spectra IDs
spectra.ids <- read.table(opt$input, stringsAsFactors = FALSE)[[1]]

# Create factory
fact <- BiodbFactory$new(useragent = 'get-massbank-peaks ; pierrick.roger@gmail.com', cache.dir = 'cache', debug = TRUE)

# Get all entries
cat("Get all entry contents...\n")
entry.contents <- fact$getEntryContent(BIODB.MASSBANK, BIODB.SPECTRUM, id = spectra.ids, chunk.size = 500)

# Create data frame from entries
cat("Create data frame from entry contents...\n")
entries.df <- NULL
n <- 0
for (ec in entry.contents) {

	cat(paste0(if (is.null(entries.df)) 0 else nrow(entries.df), " peaks found.\n"))

	n <- n + 1
	cat(paste0("Processing entry n°", n, " / ", length(entry.contents), ".\n"))

	# Get entry
	e <- fact$createEntry(BIODB.MASSBANK, BIODB.SPECTRUM, content = ec)

	# Transform entry in data frame
	e.df <- e$getFieldsAsDataFrame()

	# Merge peaks
	peaks <- e$getField(BIODB.PEAKS)
	if (is.null(peaks) || ( ! BIODB.FORMULA %in% colnames(peaks)) || all(is.na(peaks[[BIODB.FORMULA]]))) {
		cat(paste0("Entry n°", n, " (accession ", e$getField(BIODB.ACCESSION), ")", " rejected because of ", if (is.null(peaks)) "empty peak list" else "missing formula field", ".\n"))
		next
	}
	e.df <- merge(e.df, peaks)

	# Merge compound info
	compound.df <- e$getField(BIODB.COMPOUND)$getFieldsAsDataFrame()
	if (is.null(compound.df) || ( ! BIODB.INCHI %in% colnames(compound.df)) || all(is.na(compound.df[[BIODB.INCHI]]))) {
		cat(paste0("Entry n°", n, " (accession ", e$getField(BIODB.ACCESSION), ")", " rejected because of ", if (is.null(compound.df)) "missing compound information" else "missing InChI field", ".\n"))
		next
	}
	e.df <- merge(e.df, compound.df)

	# Append entry to final data frame
	entries.df <- rbind.fill(entries.df, e.df)
}

# Export peaks data frame
if ( ! is.null(entries.df))
	write.table(entries.df, file = opt$output, sep = "\t", row.names = FALSE)
